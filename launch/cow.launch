<?xml version="1.0" ?>
<launch>
  <!-- Download the dataset here: https://projects.asl.ethz.ch/datasets/doku.php?id=iros2017 -->
	<arg name="dataset_folder" default="$(env HOME)/Documents/datasets/" />
	<arg name="dataset" default="ethz_cow" />

	<arg name="ufomap" default="true"/>

	<arg name="frame_id" default="map"/>
  <arg name="voxel_size" default="0.02"/>
	<arg name="cloud_topic" default="/camera/depth_registered/points" />

	<!-- UFOMap parameters -->
	<arg name="depth_levels" default="16" />
	<arg name="color" default="true" />
	<arg name="insert_depth" default="3" />
	<arg name="max_range" default="-1" />
	<arg name="simple_ray_casting" default="false"/>
	<arg name="early_stopping" default="0" />
	<arg name="automatic_pruning" default="false" />
	<arg name="publish" default="true"/>
	<arg name="publish_every_x" default="1"/>
	<arg name="compress" default="false" />
	<arg name="publish_depth" default="4"/>

	<node pkg="ufomap_mapping" type="ufomap_mapping_server_node" name="ufomap_mapping_server_node" output="screen" required="true" if="$(arg ufomap)">
    <remap from="/cloud_in" to="$(arg cloud_topic)"/>

		<param name="multithreaded" value="true" />

		<param name="frame_id" value="$(arg frame_id)"/>
		
    <param name="resolution" value="$(arg voxel_size)" />
		<param name="depth_levels" value="$(arg depth_levels)" />
		<param name="color_map" value="$(arg color)"/>

    <param name="insert_depth" value="$(arg insert_depth)"/>
    <param name="simple_ray_casting" value="$(arg simple_ray_casting)"/>
    <param name="max_range" value="$(arg max_range)"/>

    <param name="prob_hit" value="0.8"/>
    <param name="prob_miss" value="0.45"/>

    <param name="clear_robot" value="false"/>

    <param name="compress" value="$(arg compress)"/>
    <param name="update_part_of_map" value="true"/>
    <param name="update_rate" value="2.0"/>
    <param name="publish_depth" value="$(arg publish_depth)"/>
    <param name="pub_rate" value="0.0"/>
    <param name="map_queue_size" value="100" />

		<param name="verbose" value="true"/>
  </node>

	<node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen" args="-alsologtostderr" clear_params="true" unless="$(arg ufomap)">
		<remap from="pointcloud" to="$(arg cloud_topic)"/>

		<param name="world_frame" value="$(arg frame_id)"/>

		<param name="tsdf_voxel_size" value="$(arg voxel_size)" />
		<param name="tsdf_voxels_per_side" value="16" />
		<param name="voxel_carving_enabled" value="true" />
		<param name="color_mode" value="color" />
		<param name="use_tf_transforms" value="true" />
		<param name="update_mesh_every_n_sec" value="1.0" />
		<param name="min_time_between_msgs_sec" value="0.0" />
		<param name="method" value="fast" />
		<param name="use_const_weight" value="false" />
		<param name="allow_clear" value="true" />
		<param name="verbose" value="true" />
		<!-- <remap from="transform" to="/kinect/vrpn_client/estimated_transform" />
		<rosparam file="$(find voxblox_ros)/cfg/cow_and_lady.yaml"/>
		<param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/$(anon cow).ply" /> -->
	</node>

	<node pkg="topic_tools" type="transform" name="transform_broadcaster" args="/kinect/vrpn_client/estimated_transform /tf tf/tfMessage '[[m]]' -i geometry_msgs" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_trans" args="0 0 0 0 0 0 kinect camera_rgb_optical_frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="vicon_trans" args="0 0 0 0 0 0 $(arg frame_id) vicon" />
	<node pkg="rosbag" type="play" name="player" output="screen" args="-r 1.0 --clock $(arg dataset_folder)$(arg dataset).bag"/>
</launch>
